version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - REACT_APP_BACKEND_URL=http://backend:8080 # This assumes backend runs on port 8080 inside docker network
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Expose backend on port 8080
    volumes:
      - ./backend:/app
      - /app/node_modules # Exclude node_modules from host mount
    environment:
      - NODE_ENV=development
      - PORT=8080
      - DATABASE_URL=postgresql://user:password@database:5432/ransomware_sim # Replace with actual credentials/env vars
      - JWT_SECRET=your_jwt_secret_key # Replace with a strong secret
    depends_on:
      - database

  database:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=ransomware_sim
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - db_data:/var/lib/postgresql/data # Persistent data volume
      - ./database/migrations:/docker-entrypoint-initdb.d # Run migration scripts on startup
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d ransomware_sim"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  db_data:
